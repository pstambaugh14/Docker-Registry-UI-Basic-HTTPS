server {
  listen              443 ssl;
  #server_name         _;  
  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers         HIGH:!aNULL:!MD5;
  #include snippets/self-signed.conf;
  ssl_certificate     /etc/nginx/certs/fullchain.pem;
  ssl_certificate_key /etc/nginx/certs/privkey.pem;  
  root   /usr/share/nginx/html;
    location /v2 {
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(.[0-9]-dev))|Go ).*$" ) {
          return 404;
      }
      proxy_pass http://registry:5000;
  }
}    
      #root   /usr/share/nginx/html;
      #index  index.html index.htm;
      #proxy_set_header X-Real-IP $remote_addr;
      #proxy_ssl_server_name on;         
      #proxy_pass http://172.17.0.2:5000;
#  }
#}


    #location / {
        #if ($http_user_agent ~ "^(docker\/1\.(3|4|5(.[0-9]-dev))|Go ).*$" ) {
        #    return 404;
        #}
        #root   /usr/share/nginx/html;
        #index  index.html index.htm;
        #proxy_pass http://172.17.0.2:5000
        #proxy_pass https://172.17.0.3:8080;
        #proxy_pass https://10.0.171.154:8182;
        #proxy_set_header X-Real-IP $remote_addr;
        #proxy_ssl_server_name on;
#
        #error_log /var/log/nginx/proxy_error.log;
        #add_header X-query-string $is_args$query_string;
        #resolver 0.0.0.0;
        #resolver_timeout 15s;
        #proxy_ssl on;
        #proxy_http_version 1.1;
        #proxy_set_header Accept-Encoding "";
        #proxy_set_header Cache-Control no-cache;
        #proxy_set_header Upgrade $http_upgrade;
        #proxy_set_header Connection 'upgrade';
        #subs_filter_types *;

        #proxy_pass http://172.17.0.2:5000;
  #}

#}

server {
  listen 80;
  #server_name          _;
  #server_name         172.20.0.3;
  #server_name         docker_registry_ui_1;    
  #server_name          localhost;
    #proxy_ssl_server_name on;   
  #proxy_set_header X-Real-IP $remote_addr;
  #proxy_ssl_server_name on;
  
  location / {     
    return 301 https://$host$request_uri;
  }
}
