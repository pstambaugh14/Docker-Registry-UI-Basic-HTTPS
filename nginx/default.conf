server {
  listen              443 ssl;
  server_name         _;  
  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers         HIGH:!aNULL:!MD5;
  include snippets/self-signed.conf;



    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        #proxy_pass https://172.17.0.3:8080;
        #proxy_pass https://10.0.171.154:8182;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_ssl_server_name on;
#
        error_log /var/log/nginx/proxy_error.log;
        add_header X-query-string $is_args$query_string;
        resolver 0.0.0.0;
        resolver_timeout 15s;
        #proxy_ssl on;
        proxy_http_version 1.1;
        proxy_set_header Accept-Encoding "";
        proxy_set_header Cache-Control no-cache;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        #subs_filter_types *;
    }

}

server {
  listen 80;
  server_name         172.20.0.3;
#!    resolver 127.0.0.11; # This is for docker container name resolver
    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    # disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;

    # required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
    chunked_transfer_encoding on;
    # required for strict SNI checking: see Issue #70 (https://github.com/Joxit/docker-registry-ui/issues/70)
    proxy_ssl_server_name on;      
  location /  {
    return 301 https://$host$request_uri;

        #proxy_pass https://172.17.0.3:8080;
        #proxy_pass https://10.0.171.154:8182;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_ssl_server_name on;
#
        error_log /var/log/nginx/proxy_error.log;
        add_header X-query-string $is_args$query_string;
        resolver 0.0.0.0;
        resolver_timeout 15s;
        #proxy_ssl on;
        proxy_http_version 1.1;
        proxy_set_header Accept-Encoding "";
        proxy_set_header Cache-Control no-cache;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        #subs_filter_types *;
  }
}
