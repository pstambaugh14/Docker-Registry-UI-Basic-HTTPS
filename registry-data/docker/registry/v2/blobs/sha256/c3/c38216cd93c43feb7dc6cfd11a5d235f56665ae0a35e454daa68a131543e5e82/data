{"architecture":"amd64","config":{"Hostname":"","Domainname":"","User":"","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"ExposedPorts":{"80/tcp":{}},"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","NGINX_VERSION=1.19.0","NJS_VERSION=0.4.1","PKG_RELEASE=1","NGINX_PROXY_HEADER_Host=$http_host"],"Cmd":null,"Image":"sha256:7b72451e71effe85cba8ae11771ac422f4fe77799572f7da052bd28ba9214435","Volumes":null,"WorkingDir":"/usr/share/nginx/html/","Entrypoint":["/bin/sh","-c","entrypoint"],"OnBuild":null,"Labels":{"maintainer":"Jones MAGLOIRE @Joxit"},"StopSignal":"SIGTERM"},"container":"736b316472b19c309a8e92058ee71a3041c16be9e51b37821b4b2fac10ed8077","container_config":{"Hostname":"736b316472b1","Domainname":"","User":"","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"ExposedPorts":{"80/tcp":{}},"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","NGINX_VERSION=1.19.0","NJS_VERSION=0.4.1","PKG_RELEASE=1","NGINX_PROXY_HEADER_Host=$http_host"],"Cmd":["/bin/sh","-c","#(nop) ","ENTRYPOINT [\"/bin/sh\" \"-c\" \"entrypoint\"]"],"Image":"sha256:7b72451e71effe85cba8ae11771ac422f4fe77799572f7da052bd28ba9214435","Volumes":null,"WorkingDir":"/usr/share/nginx/html","Entrypoint":["/bin/sh","-c","entrypoint"],"OnBuild":null,"Labels":{"maintainer":"Jones MAGLOIRE @Joxit"},"StopSignal":"SIGTERM"},"created":"2020-06-21T21:53:48.040238722Z","docker_version":"19.03.8","history":[{"created":"2020-04-24T01:05:03.608058404Z","created_by":"/bin/sh -c #(nop) ADD file:b91adb67b670d3a6ff9463e48b7def903ed516be66fc4282d22c53e41512be49 in / "},{"created":"2020-04-24T01:05:03.92860976Z","created_by":"/bin/sh -c #(nop)  CMD [\"/bin/sh\"]","empty_layer":true},{"created":"2020-04-24T12:58:32.274209903Z","created_by":"/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e","empty_layer":true},{"created":"2020-06-02T00:36:21.087734537Z","created_by":"/bin/sh -c #(nop)  ENV NGINX_VERSION=1.19.0","empty_layer":true},{"created":"2020-06-02T00:36:21.2631491Z","created_by":"/bin/sh -c #(nop)  ENV NJS_VERSION=0.4.1","empty_layer":true},{"created":"2020-06-02T00:36:21.439021057Z","created_by":"/bin/sh -c #(nop)  ENV PKG_RELEASE=1","empty_layer":true},{"created":"2020-06-02T00:36:26.151675864Z","created_by":"/bin/sh -c set -x     \u0026\u0026 addgroup -g 101 -S nginx     \u0026\u0026 adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     \u0026\u0026 apkArch=\"$(cat /etc/apk/arch)\"     \u0026\u0026 nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     \u0026\u0026 case \"$apkArch\" in         x86_64)             set -x             \u0026\u0026 KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             \u0026\u0026 apk add --no-cache --virtual .cert-deps                 openssl             \u0026\u0026 wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             \u0026\u0026 if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             \u0026\u0026 apk del .cert-deps             \u0026\u0026 apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             \u0026\u0026 tempDir=\"$(mktemp -d)\"             \u0026\u0026 chown nobody:nobody $tempDir             \u0026\u0026 apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             \u0026\u0026 su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 \u0026\u0026 cd ${tempDir}                 \u0026\u0026 hg clone https://hg.nginx.org/pkg-oss                 \u0026\u0026 cd pkg-oss                 \u0026\u0026 hg up ${NGINX_VERSION}-${PKG_RELEASE}                 \u0026\u0026 cd alpine                 \u0026\u0026 make all                 \u0026\u0026 apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 \u0026\u0026 abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             \u0026\u0026 cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             \u0026\u0026 apk del .build-deps             \u0026\u0026 apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     \u0026\u0026 if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     \u0026\u0026 apk add --no-cache --virtual .gettext gettext     \u0026\u0026 mv /usr/bin/envsubst /tmp/         \u0026\u0026 runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     \u0026\u0026 apk add --no-cache $runDeps     \u0026\u0026 apk del .gettext     \u0026\u0026 mv /tmp/envsubst /usr/local/bin/     \u0026\u0026 apk add --no-cache tzdata     \u0026\u0026 apk add --no-cache curl ca-certificates     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log     \u0026\u0026 mkdir /docker-entrypoint.d"},{"created":"2020-06-02T00:36:26.392061133Z","created_by":"/bin/sh -c #(nop) COPY file:d68fadb480cbc781c3424ce3e42e1b5be80133bdcce2569655e90411a4045da2 in / "},{"created":"2020-06-02T16:23:49.383998713Z","created_by":"/bin/sh -c #(nop) COPY file:b96f664d94ca7bbe69241468d85ee421e9d310ffa36f3b04c762dcce9a42c7f1 in /docker-entrypoint.d "},{"created":"2020-06-02T16:23:49.592588773Z","created_by":"/bin/sh -c #(nop) COPY file:cc7d4f1d03426ebd11e960d6a487961e0540059dcfad14b33762f008eed03788 in /docker-entrypoint.d "},{"created":"2020-06-02T16:23:49.759581276Z","created_by":"/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]","empty_layer":true},{"created":"2020-06-02T16:23:49.93327018Z","created_by":"/bin/sh -c #(nop)  EXPOSE 80","empty_layer":true},{"created":"2020-06-02T16:23:50.107420248Z","created_by":"/bin/sh -c #(nop)  STOPSIGNAL SIGTERM","empty_layer":true},{"created":"2020-06-02T16:23:50.280826105Z","created_by":"/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]","empty_layer":true},{"created":"2020-06-21T21:53:46.093930738Z","created_by":"/bin/sh -c #(nop)  LABEL maintainer=Jones MAGLOIRE @Joxit","empty_layer":true},{"created":"2020-06-21T21:53:46.36339497Z","created_by":"/bin/sh -c #(nop) WORKDIR /usr/share/nginx/html/","empty_layer":true},{"created":"2020-06-21T21:53:46.593635115Z","created_by":"/bin/sh -c #(nop)  ENV NGINX_PROXY_HEADER_Host=$http_host","empty_layer":true},{"created":"2020-06-21T21:53:46.890607191Z","created_by":"/bin/sh -c #(nop) COPY file:286d86c48dc06c93888aa3b5676d71ca2667067daee2a638655274902f8dc22b in /etc/nginx/conf.d/default.conf "},{"created":"2020-06-21T21:53:47.201229073Z","created_by":"/bin/sh -c #(nop) COPY dir:92598de7ee618b9416834102c3f175d34354196e38de236b34d2ee28adc79c71 in /usr/share/nginx/html/ "},{"created":"2020-06-21T21:53:47.504297103Z","created_by":"/bin/sh -c #(nop) COPY file:9930aa68b0f628f6724b6e71d212c29d171b8e7ea666a0e8ce16d8ff1b7262c0 in /usr/share/nginx/html/scripts/docker-registry-ui.js "},{"created":"2020-06-21T21:53:47.817899702Z","created_by":"/bin/sh -c #(nop) COPY file:61429d8e37ce150470e4e47a371c530871182f00984e38ef5ef9a3b52e0a63b5 in /bin "},{"created":"2020-06-21T21:53:48.040238722Z","created_by":"/bin/sh -c #(nop)  ENTRYPOINT [\"/bin/sh\" \"-c\" \"entrypoint\"]","empty_layer":true}],"os":"linux","rootfs":{"type":"layers","diff_ids":["sha256:3e207b409db364b595ba862cdc12be96dcdad8e36c59a03b7b3b61c946a5741a","sha256:7bb2a9d373374aee9939eff4c7a7883e74c22fd4ad9499497a1a03fa987befd4","sha256:5d17421f15719347504420acd3af66f55803fc2f82de17d8be90c432db47c297","sha256:570fc47f255858a1ea028ee56a4472c23a37f8103d10066028a534147661d943","sha256:a181cbf898a0262fa8f9dfcf769014445ca54f25c0440de8c40692392b57de03","sha256:c4b337aa0f322f994cf1c6fad6903b6accac7a8c0049f8b0720d706f9f2c7704","sha256:1141656cd023636b73b810f4aac0ce41a6dd5befa4697a585c265f7fa0877725","sha256:faf2286862c2591b209301ea7e22f21fe8674171279980cb9ba5655371355f6f","sha256:b84688a74f9757094170c0e575a19f300db82ec397306c7ef4728b4fd5d9093b"]}}